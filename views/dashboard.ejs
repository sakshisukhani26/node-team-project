<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background: linear-gradient(to right, #e66465, #9198e5);
        color: white;
        padding: 30px;
      }

      h1,
      h2 {
        text-align: center;
      }

      .form-preview {
        max-height: 200px;
        overflow-y: auto;
      }

      .card-clickable {
        cursor: pointer;
        transition: 0.3s ease;
      }

      .card-clickable:hover {
        transform: scale(1.02);
      }

      .card-clickable input,
      .card-clickable select {
        pointer-events: none;
        background-color: #f8f9fa;
      }

      .modal-content {
        color: black;
      }

      .modal-body {
        max-height: 60vh;
        overflow-y: auto;
      }
    </style>
  </head>

  <body>
    <div class="container text-center mt-3 mb-5">
      <h1>Hello, <%= user.firstName %>!</h1>
      <p>Welcome to your dashboard.</p>
      <a href="/logout" class="btn btn-light mt-3">Logout</a>
    </div>

    <div class="container">
      <div class="row" id="card-wrapper"></div>
    </div>

    <div id="modals-wrapper"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      async function loadForms() {
        const res = await fetch("/api/forms");
        const allForms = await res.json();

        const cardWrapper = document.getElementById("card-wrapper");
        const modalsWrapper = document.getElementById("modals-wrapper");

        allForms.forEach((form, index) => {
          // card view
          const col = document.createElement("div");
          col.className = "col-md-4 mb-4";

          const card = document.createElement("div");
          card.className = "card card-clickable shadow-sm";
          card.setAttribute("data-bs-toggle", "modal");
          card.setAttribute("data-bs-target", `#formModal${index}`);

          const cardBody = document.createElement("div");
          cardBody.className = "card-body";

          const title = document.createElement("h5");
          title.className = "card-title";
          title.textContent = form.formTitle;

          const preview = document.createElement("div");
          preview.className = "form-preview";

          form.formData.slice(0, 3).forEach((field) => {
            const group = document.createElement("div");
            group.className = "mb-2";

            const label = document.createElement("label");
            label.className = "form-label";
            label.textContent = field.question;

            const input = document.createElement("input");
            input.className = "form-control";
            input.placeholder = field.placeholder;
            input.disabled = true;

            group.appendChild(label);
            group.appendChild(input);
            preview.appendChild(group);
          });

          cardBody.appendChild(title);
          cardBody.appendChild(preview);
          card.appendChild(cardBody);
          col.appendChild(card);
          cardWrapper.appendChild(col);

          // modal for forms
          const modal = document.createElement("div");
          modal.className = "modal fade";
          modal.id = `formModal${index}`;
          modal.tabIndex = -1;
          modal.innerHTML = `
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title">${form.formTitle}</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <form id="form-${index}">
                    ${form.formData
                      .map((field) => {
                        if (field.type === "dropdown" && field.options) {
                          return `
                          <div class="mb-3">
                            <label class="form-label">${field.question}</label>
                            <select class="form-control" name="${
                              field.name
                            }" required>
                              ${field.options
                                .map(
                                  (opt) =>
                                    `<option value="${opt}">${opt}</option>`
                                )
                                .join("")}
                            </select>
                          </div>`;
                        } else if (field.type === "radio" && field.options) {
                          return `
                          <div class="mb-3">
                            <label class="form-label d-block">${
                              field.question
                            }</label>
                            ${field.options
                              .map(
                                (opt) => `
                              <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="${field.name}" id="${field.name}-${opt}" value="${opt}" required>
                                <label class="form-check-label" for="${field.name}-${opt}">${opt}</label>
                              </div>`
                              )
                              .join("")}
                          </div>`;
                        } else {
                          return `
                          <div class="mb-3">
                            <label class="form-label">${field.question}</label>
                            <input type="text" class="form-control" name="${
                              field.name
                            }" placeholder="${field.placeholder}" ${
                            field.validation?.includes("required")
                              ? "required"
                              : ""
                          } />
                          </div>`;
                        }
                      })
                      .join("")}
                    <button type="submit" class="btn btn-primary w-100">Submit</button>
                  </form>
                </div>
              </div>
            </div>`;

          modalsWrapper.appendChild(modal);

          // data to db
          setTimeout(() => {
            const formEl = document.getElementById(`form-${index}`);
            formEl.addEventListener("submit", async (e) => {
              e.preventDefault();

              const formData = new FormData(formEl);
              const answers = Object.fromEntries(formData.entries());

              try {
                const response = await fetch("/submit-form", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({
                    formId: form._id,
                    formTitle: form.formTitle,
                    answers: answers,
                  }),
                });

                const result = await response.json();

                if (response.ok) {
                  alert(`Form "${form.formTitle}" submitted successfully!`);
                  window.location.href = "/dashboard";
                } else {
                  throw new Error(result.message || "Failed to submit form");
                }
              } catch (error) {
                console.error("Error submitting form:", error);
                alert("Failed to submit the form. Please try again.");
              }
            });
          }, 0);
        });
      }

      loadForms();
    </script>
  </body>
</html>
